function e(e){return e&&e.__esModule?e.default:e}var n="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},r={},t={},o=n.parcelRequired7c6;null==o&&((o=function(e){if(e in r)return r[e].exports;if(e in t){var n=t[e];delete t[e];var o={id:e,exports:{}};return r[e]=o,n.call(o.exports,o,o.exports),o.exports}var s=new Error("Cannot find module '"+e+"'");throw s.code="MODULE_NOT_FOUND",s}).register=function(e,n){t[e]=n},n.parcelRequired7c6=o);var s=o("fZKcF"),a=o("5xtEq"),i=o("7Y9D8");const l={form:document.querySelector(".search-form"),gallery:document.querySelector(".gallery"),guard:document.querySelector(".js-guard")},c=new(0,a.default),u=new(e(s))(".gallery a");function f(){return c.fetchGallery().then((n=>(y.observe(l.guard),function(n){console.log("ðŸš€ ~ isContentFinished ~ res",n),2===c.page?e(i).Notify.success(`Hooray! We found ${n.totalHits} images.`):n.hits.length<c.perPage&&(y.unobserve(l.guard),e(i).Notify.warning("We're sorry, but you've reached the end of search results."))}(n),n.hits))).then(d).catch(g).finally((()=>{l.form.reset()}))}function d(e){let n="";n=e.map((({webformatURL:e,largeImageURL:n,tags:r,likes:t,views:o,comments:s,downloads:a})=>`<a class="gallery__item" href="${n}">\n        <div class="photo-card">\n  <img class="gallery__image" src="${e}" alt="${r}" loading="lazy" />\n  <div class="info">\n    <p class="info-item">\n      <b>Likes </b>${t}\n    </p>\n    <p class="info-item">\n      <b>Views </b>${o}\n    </p>\n    <p class="info-item">\n      <b>Comments </b>${s}\n    </p>\n    <p class="info-item">\n      <b>Downloads </b>${a}\n    </p>\n  </div>\n</div></a>`)).join(""),l.gallery.insertAdjacentHTML("beforeend",n),u.refresh()}function g(n){y.unobserve(l.guard),e(i).Notify.failure("Sorry, there are no images matching your search query. Please try again.")}l.form.addEventListener("submit",(function(e){e.preventDefault(),c.q=e.currentTarget.elements.searchQuery.value.trim(),c.resetPage(),l.gallery.innerHTML="",f()}));const y=new IntersectionObserver((function(e){console.log(e),e.forEach((e=>{console.log("entry.isIntersecting",e.isIntersecting),e.isIntersecting&&f()}))}),{root:null,rootMargin:"300px"});
//# sourceMappingURL=02-infinityScroll.052b198c.js.map
